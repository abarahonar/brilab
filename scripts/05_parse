#!/bin/env python3
import json
import sys
import re


INSERT_CONFLICT = "('{}', '{}', '{}', '{}', {}),"
INSERT_REGION = "('{}'),"
INSERT_SECTOR = "('{}'),"


if len(sys.argv) != 3:
    print(f'Usage: {sys.argv[0]} input_file output_file')
    sys.exit(1)

input_file = sys.argv[1]
with open(input_file) as f:
    data = json.load(f)

name_pattern = re.compile(r'^([\w ()-,]*)')
year_pattern = re.compile(r'Año de inicio: (\d\d\d\d)')
sector_pattern = re.compile(r'Sector Productivo:([\w ]*)')
region_pattern = re.compile(r'saturación/contaminación: {0,1}\w*\s\s([\w \']*)')

dump = data['data']
sectors = set()
regions = set()
conflict_expression = "INSERT INTO conflictos (filename, name, region, sector, year) VALUES "
for conflict in dump:
    filename = conflict["filename"]
    match = name_pattern.search(conflict["content"])
    name = match.group(1)
    match = year_pattern.search(conflict["content"])
    year = match.group(1)
    match = sector_pattern.search(conflict["content"])
    sector = match.group(1)
    match = region_pattern.search(conflict["content"])
    region = match.group(1)

    conflict_expression += INSERT_CONFLICT.format(filename, name, region.replace("'", "''"), sector, year)
    sectors.add(sector)
    regions.add(region)

region_expression = "INSERT INTO regiones (nombre) VALUES "
for region in regions:
    region_expression += INSERT_REGION.format(region.replace("'", "''"))

sector_expression = "INSERT INTO sectores (nombre) VALUES "
for sector in sectors:
    sector_expression += INSERT_SECTOR.format(sector)


conflict_expression = conflict_expression[:len(conflict_expression) - 1] + ";"
region_expression = region_expression[:len(region_expression) - 1] + ";"
sector_expression = sector_expression[:len(sector_expression) - 1] + ";"

output_file = sys.argv[2]
with open(output_file, "w") as f:
    f.write(conflict_expression)
    f.write(region_expression)
    f.write(sector_expression)
